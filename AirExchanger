definition(
    name: "Air Exchanger Control",
    namespace: "hubitat",
    author: "erilaj",
    description: "Control for an air exchanger",
    category: "Convenience",
    iconUrl: "",
    iconX2Url: "")

preferences {
	page(name: "mainPage")
}

def mainPage() {
	dynamicPage(name: "mainPage", title: "Air Exchanger", install: true, uninstall: true) {
		section {
			input "thisName", "text", title: "Name this app", submitOnChange: true
			if(thisName) app.updateLabel("$thisName")
			input "outdoorTemperature", "capability.temperatureMeasurement", title: "Select Outdood Temperature Sensors", submitOnChange: true, required: true, multiple: false
            input "outdoorHumidity", "capability.relativeHumidityMeasurement", title: "Select Outdoor Humidity Sensors", submitOnChange: true, required: true, multiple: false
            input "indoorHumidity", "capability.relativeHumidityMeasurement", title: "Select Indoor Humidity Sensors", submitOnChange: true, required: true, multiple: false
            input "circulateMode", "capability.switch", title: "Select a switch for the Circulation Mode", submitOnChange: true, required: true, multiple: false
            input "exchangeMode", "capability.switch", title: "Select a switch for the Exchange Mode", submitOnChange: true, required: true, multiple: false
            input "exchangeRate", "number", title: "Default Exchange Rate (min/hour)",range:"0..60", defualtvalue:15, submitOnChange: true, required: true, multiple: false
			//if(luxSensors) paragraph "Current average is ${averageLux()} lux"
		}
	}
}

def installed() {
	initialize()
}

def updated() {
	unsubscribe()
	initialize()
}

def initialize() {
	subscribe(outdoorTemperature, "temperature", outdoorTempHandler)
    subscribe(outdoorHumidity, "humidity", outdoorHumidityHandler)
    subscribe(indoorHumidity, "humidity", indoorHumidityHandler)
}

def averageLux() {
	def total = 0
	def n = luxSensors.size()
	luxSensors.each {total += it.currentIlluminance}
	return (total / n).toDouble().round(0).toInteger()
}

def outdoorTempHandler(evt) {
	outTemp = evt.value
	log.info "OutdoorTemp = $outTemp"
}
def outdoorHumidityHandler(evt) {
	outHum = evt.value
	log.info "OutdoorHumidity = $outHum"
}
def indoorHumidityHandler(evt) {
	inHum = evt.value
	log.info "IndoorHumidity = $inHum"
}
def outTemp = 0.0
def outHum = 0.0
def inHum =0.0
private DoYourThing(){
    
}
